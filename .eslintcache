[{"C:\\react\\home-work\\my-first-app\\src\\index.js":"1","C:\\react\\home-work\\my-first-app\\src\\App.js":"2","C:\\react\\home-work\\my-first-app\\src\\home-work-1\\ProductList.js":"3","C:\\react\\home-work\\my-first-app\\src\\home-work-1\\ProductForm.js":"4","C:\\react\\home-work\\my-first-app\\src\\home-work-1\\ProductListItem.js":"5","C:\\react\\home-work\\my-first-app\\src\\home-work-2\\Blog.js":"6","C:\\react\\home-work\\my-first-app\\src\\home-work-2\\AuthorInfo.js":"7","C:\\react\\home-work\\my-first-app\\src\\home-work-2\\PostList.js":"8","C:\\react\\home-work\\my-first-app\\src\\home-work-2\\PostItem.js":"9","C:\\react\\home-work\\my-first-app\\src\\home-work-2\\LoadingOverlay.js":"10","C:\\react\\home-work\\my-first-app\\src\\home-work-2\\Comments.js":"11","C:\\react\\home-work\\my-first-app\\src\\home-work-3\\WrapperGlide.js":"12","C:\\react\\home-work\\my-first-app\\src\\home-work-3\\Glide.js":"13"},{"size":179,"mtime":1607977054575,"results":"14","hashOfConfig":"15"},{"size":388,"mtime":1610486087236,"results":"16","hashOfConfig":"15"},{"size":1688,"mtime":1608070273764,"results":"17","hashOfConfig":"15"},{"size":2413,"mtime":1608071155498,"results":"18","hashOfConfig":"15"},{"size":1544,"mtime":1608070363801,"results":"19","hashOfConfig":"15"},{"size":752,"mtime":1610311994837,"results":"20","hashOfConfig":"15"},{"size":3068,"mtime":1610316234680,"results":"21","hashOfConfig":"15"},{"size":1236,"mtime":1610309887324,"results":"22","hashOfConfig":"15"},{"size":1285,"mtime":1610316508458,"results":"23","hashOfConfig":"15"},{"size":328,"mtime":1610308893234,"results":"24","hashOfConfig":"15"},{"size":1259,"mtime":1610314388426,"results":"25","hashOfConfig":"15"},{"size":1986,"mtime":1610491859313,"results":"26","hashOfConfig":"15"},{"size":1703,"mtime":1610491857309,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1u707ai",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\home-work\\my-first-app\\src\\index.js",[],["58","59"],"C:\\react\\home-work\\my-first-app\\src\\App.js",["60"],"C:\\react\\home-work\\my-first-app\\src\\home-work-1\\ProductList.js",[],"C:\\react\\home-work\\my-first-app\\src\\home-work-1\\ProductForm.js",[],"C:\\react\\home-work\\my-first-app\\src\\home-work-1\\ProductListItem.js",[],"C:\\react\\home-work\\my-first-app\\src\\home-work-2\\Blog.js",[],"C:\\react\\home-work\\my-first-app\\src\\home-work-2\\AuthorInfo.js",["61","62"],"import React, { Component } from 'react';\r\nimport { Card, Icon, Image, List, Feed } from \"semantic-ui-react\";\r\nimport LoadingOverlay from \"./LoadingOverlay\";\r\n\r\nclass AuthorInfo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            author : null,\r\n            albums:[],\r\n            loading : false,\r\n            error : '',\r\n            areAlbumsDisplayed: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {authorId} = this.props;\r\n        if(authorId){\r\n            this.fetchAuthor(authorId);\r\n            this.fetchAlbums(authorId);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.authorId !== this.props.authorId && this.props.authorId) {\r\n            this.fetchAuthor(this.props.authorId);\r\n            this.fetchAlbums(this.props.authorId)\r\n          }\r\n    }\r\n\r\n    fetchAuthor(authorId){\r\n        this.setState({loading:true});\r\n        fetch(`https://jsonplaceholder.typicode.com/users/${authorId}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({author: data, loading: false}))\r\n            .catch(e => this.setState({error: e.message , loading: false, author: null}))\r\n    }\r\n\r\n    fetchAlbums(authorId) {\r\n        this.setState({ loading: true });\r\n        fetch(`https://jsonplaceholder.typicode.com/users/${authorId}/albums`)\r\n          .then(response => response.json())\r\n          .then(albums => this.setState({ albums, loading: false }))\r\n          .catch(e => this.setState({ loading: false }))\r\n      }\r\n    render() {\r\n        const {error, author , albums, loading, areAlbumsDisplayed} = this.state;\r\n        \r\n        \r\n        return (\r\n            <div className='author-fixed'>\r\n        <div className='error'>{error}</div>\r\n        <LoadingOverlay active={loading} />\r\n        {author &&\r\n        <Card>\r\n          <Image src='https://react.semantic-ui.com/images/avatar/large/matthew.png' wrapped ui={false}/>\r\n          <Card.Content>\r\n            <Card.Header>{author.name}</Card.Header>\r\n            <Card.Meta>nick-name : <b>{author.username}</b></Card.Meta>\r\n            <Card.Meta>\r\n              <span>email : {author.email}</span>\r\n            </Card.Meta>\r\n            <Card.Meta>\r\n              <span>phone : {author.phone}</span>\r\n            </Card.Meta>\r\n            <Card.Description>\r\n              {author.address.city}, {author.address.street} {author.address.zipcode}\r\n            </Card.Description>\r\n          </Card.Content>\r\n          <Card.Content extra>\r\n            <a onClick={() => this.setState({ areAlbumsDisplayed: !areAlbumsDisplayed })}>\r\n              <Icon name='camera'/>\r\n              {albums.length} Albums : {areAlbumsDisplayed ? 'Hide Albums' : 'Show Albums'}\r\n            </a>\r\n            {areAlbumsDisplayed && \r\n            <List>\r\n              {albums.map(album => <List.Item>{album.title}</List.Item> )}\r\n            </List> }\r\n          </Card.Content>\r\n        </Card>\r\n        }\r\n      </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthorInfo;\r\n","C:\\react\\home-work\\my-first-app\\src\\home-work-2\\PostList.js",["63","64","65","66"],"import React, { Component } from 'react';\r\nimport { Feed, Icon, Dimmer, Loader } from \"semantic-ui-react\";\r\nimport PostItem from \"./PostItem\";\r\nimport LoadingOverlay from \"./LoadingOverlay\";\r\n\r\nclass PostList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            posts: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchUsers();\r\n    }\r\n\r\n    fetchUsers(){\r\n        this.setState({ loading: true });\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => response.json())\r\n            .then(posts =>{\r\n                this.setState({ loading: false, posts })\r\n            })\r\n            .catch(e =>{\r\n                this.setState({loading:false});\r\n                alert(e.massage)\r\n            })\r\n    }\r\n    render() {\r\n        const {loading, posts} = this.state;\r\n        const {onPostClick} = this.props;\r\n\r\n        return (\r\n        <div className='post-list-wrapper'>\r\n            <LoadingOverlay active={loading} />\r\n            { posts.map(post => <PostItem onClick={() => onPostClick(post)} post={post} key={post.id} /> )}\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default PostList;\r\n","C:\\react\\home-work\\my-first-app\\src\\home-work-2\\PostItem.js",["67","68"],"import React, { Component } from 'react';\r\nimport { Feed } from \"semantic-ui-react\";\r\nimport Comments from \"./Comments\";\r\n\r\nclass PostItem extends Component {\r\n  state = {\r\n    areCommentsDisplayed: false\r\n  };\r\n\r\n    render() {\r\n        const {post, onClick} = this.props;\r\n        const { areCommentsDisplayed } = this.state;\r\n\r\n        return (\r\n           <Feed>\r\n        <Feed.Event>\r\n          <Feed.Label>\r\n            <img src='https://react.semantic-ui.com/images/avatar/small/justen.jpg' />\r\n          </Feed.Label>\r\n          <Feed.Content>\r\n            <Feed.Summary onClick={onClick}>\r\n              <Feed.User>{post.title}</Feed.User>\r\n            </Feed.Summary>\r\n            <Feed.Extra   className='post-title'>\r\n              {post.body}\r\n            </Feed.Extra>\r\n            <Feed.Extra>\r\n              <a\r\n                onClick={() => this.setState({ areCommentsDisplayed: !areCommentsDisplayed })}>\r\n                {areCommentsDisplayed ? 'Hide Comments' : 'Show Comments'}\r\n              </a>\r\n            </Feed.Extra>\r\n            <Feed.Extra>\r\n              {areCommentsDisplayed && <Comments postId={post.id} /> }\r\n            </Feed.Extra>\r\n          </Feed.Content>\r\n        </Feed.Event>\r\n      </Feed>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostItem;","C:\\react\\home-work\\my-first-app\\src\\home-work-2\\LoadingOverlay.js",[],"C:\\react\\home-work\\my-first-app\\src\\home-work-2\\Comments.js",[],"C:\\react\\home-work\\my-first-app\\src\\home-work-3\\WrapperGlide.js",["69","70"],"C:\\react\\home-work\\my-first-app\\src\\home-work-3\\Glide.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":2,"column":35,"nodeType":"77","messageId":"78","endLine":2,"endColumn":39},{"ruleId":"80","severity":1,"message":"81","line":72,"column":13,"nodeType":"82","endLine":72,"endColumn":91},{"ruleId":"75","severity":1,"message":"79","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"75","severity":1,"message":"83","line":2,"column":16,"nodeType":"77","messageId":"78","endLine":2,"endColumn":20},{"ruleId":"75","severity":1,"message":"84","line":2,"column":22,"nodeType":"77","messageId":"78","endLine":2,"endColumn":28},{"ruleId":"75","severity":1,"message":"85","line":2,"column":30,"nodeType":"77","messageId":"78","endLine":2,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":18,"column":13,"nodeType":"82","endLine":18,"endColumn":87},{"ruleId":"80","severity":1,"message":"81","line":28,"column":15,"nodeType":"82","endLine":29,"endColumn":96},{"ruleId":"75","severity":1,"message":"88","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":18},{"ruleId":"75","severity":1,"message":"89","line":2,"column":20,"nodeType":"77","messageId":"78","endLine":2,"endColumn":29},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Blog' is defined but never used.","Identifier","unusedVar","'Feed' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Icon' is defined but never used.","'Dimmer' is defined but never used.","'Loader' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Checkbox' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]